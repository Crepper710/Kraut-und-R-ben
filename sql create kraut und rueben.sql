DROP DATABASE IF EXISTS krautundrueben;
CREATE DATABASE IF NOT EXISTS krautundrueben;
USE krautundrueben;


CREATE TABLE KUNDE (
    KUNDENNR        INTEGER NOT NULL,
    NACHNAME        VARCHAR(50),
    VORNAME         VARCHAR(50),
    GEBURTSDATUM    DATE,
    STRASSE         VARCHAR(50),
    HAUSNR          VARCHAR(6),
    PLZ             VARCHAR(5),
    ORT             VARCHAR(50),
    TELEFON         VARCHAR(25),
    EMAIL           VARCHAR(50)
    );

CREATE TABLE ZUTAT(
    ZUTATENNR       INTEGER NOT NULL,
    BEZEICHNUNG     VARCHAR(50),
    EINHEIT         VARCHAR (25),
    NETTOPREIS      DECIMAL(10,2),
    BESTAND         INTEGER,
    LIEFERANT       INTEGER,
    KALORIEN        INTEGER,
    KOHLENHYDRATE   DECIMAL (10,2),
    PROTEIN         DECIMAL(10,2)
);

CREATE TABLE BESTELLUNG (
    BESTELLNR        INTEGER AUTO_INCREMENT NOT NULL,
    KUNDENNR         INTEGER,
    BESTELLDATUM     DATE,
    RECHNUNGSBETRAG  DECIMAL(10,2),
    PRIMARY KEY (BESTELLNR)
);

CREATE TABLE BESTELLUNGZUTAT (
    BESTELLNR       INTEGER NOT NULL,
    ZUTATENNR       INTEGER,
    MENGE           INTEGER
);

CREATE TABLE LIEFERANT (
    LIEFERANTENNR   INTEGER NOT NULL,
    LIEFERANTENNAME VARCHAR(50),
    STRASSE         VARCHAR(50),
    HAUSNR          VARCHAR(6),
    PLZ             VARCHAR(5),
    ORT             VARCHAR(50),
    TELEFON         VARCHAR(25),
    EMAIL           VARCHAR(50)
);

CREATE TABLE REZEPT (
    REZEPTNR      INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    REZEPTNAME    VARCHAR(50)
);

CREATE TABLE REZEPTZUTAT (
    ZUTATENNR     INTEGER NOT NULL,
    REZEPTNR      INTEGER NOT NULL,
    MENGE         INTEGER,
    PRIMARY KEY (ZUTATENNR, REZEPTNR)
);

CREATE TABLE BESCHRAENKUNGEN (
    BESCHRAENKUNGS_ID     INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    BESCHRAENKUNGSNAME    VARCHAR(50)
);

CREATE TABLE BESCHRAENKUNGENREZEPT (
    BESCHRAENKUNGS_ID     INTEGER NOT NULL,
    REZEPTNR              INTEGER NOT NULL,
    PRIMARY KEY (BESCHRAENKUNGS_ID, REZEPTNR)
);

Create TABLE ERNAEHRUNGSKATEGORIEN (
    ERNAEHRUNGSKATEGORIE_ID     INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
    ERNAEHRUNGSKATEGORIENAME    VARCHAR(50)
);

CREATE TABLE ERNAEHRUNGKATREZEPT (
    ERNAEHRUNGSKATEGORIE_ID    INTEGER NOT NULL,
    REZEPTNR                   INTEGER NOT NULL
);

/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/


ALTER TABLE ZUTAT ADD PRIMARY KEY (ZUTATENNR);
ALTER TABLE KUNDE ADD PRIMARY KEY (KUNDENNR);
ALTER TABLE LIEFERANT ADD PRIMARY KEY (LIEFERANTENNR);
ALTER TABLE BESTELLUNGZUTAT ADD PRIMARY KEY (BESTELLNR,ZUTATENNR);
ALTER TABLE ERNAEHRUNGKATREZEPT ADD PRIMARY KEY (ERNAEHRUNGSKATEGORIE_ID, REZEPTNR);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE ZUTAT ADD FOREIGN KEY (LIEFERANT) REFERENCES LIEFERANT (LIEFERANTENNR);
ALTER TABLE BESTELLUNGZUTAT ADD FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG (BESTELLNR);
ALTER TABLE BESTELLUNG ADD FOREIGN KEY (KUNDENNR) REFERENCES KUNDE (KUNDENNR);
ALTER TABLE BESTELLUNGZUTAT ADD FOREIGN KEY (ZUTATENNR) REFERENCES ZUTAT (ZUTATENNR);
ALTER TABLE REZEPTZUTAT ADD FOREIGN KEY (ZUTATENNR) REFERENCES ZUTAT (ZUTATENNR);
ALTER TABLE REZEPTZUTAT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE ERNAEHRUNGKATREZEPT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE ERNAEHRUNGKATREZEPT ADD FOREIGN KEY (ERNAEHRUNGSKATEGORIE_ID) REFERENCES ERNAEHRUNGSKATEGORIEN (ERNAEHRUNGSKATEGORIE_ID);
ALTER TABLE BESCHRAENKUNGENREZEPT ADD FOREIGN KEY (BESCHRAENKUNGS_ID) REFERENCES BESCHRAENKUNGEN (BESCHRAENKUNGS_ID);
ALTER TABLE BESCHRAENKUNGENREZEPT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);


/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

DELIMITER //


CREATE PROCEDURE ZutatenOhneRezept()
BEGIN
    SELECT ZUTAT.BEZEICHNUNG
    FROM ZUTAT
    LEFT JOIN REZEPTZUTAT ON ZUTAT.ZUTATENNR = REZEPTZUTAT.ZUTATENNR
	 WHERE REZEPTZUTAT.ZUTATENNR IS NULL;
END//


CREATE PROCEDURE RezepteMitErnaehrungskategorie(IN ErnaehrungskategorieName_ VARCHAR(50))
BEGIN
    SELECT REZEPT.REZEPTNAME
    FROM ERNAEHRUNGSKATEGORIEN
    INNER JOIN ERNAEHRUNGKATREZEPT ON ERNAEHRUNGSKATEGORIEN.ERNAEHRUNGSKATEGORIE_ID = ERNAEHRUNGKATREZEPT.ERNAEHRUNGSKATEGORIE_ID
    INNER JOIN REZEPT ON ERNAEHRUNGKATREZEPT.REZEPTNR = REZEPT.REZEPTNR
    WHERE ERNAEHRUNGSKATEGORIEN.ERNAEHRUNGSKATEGORIENAME = ErnaehrungskategorieName_;
END//


CREATE PROCEDURE RezepteMitWenigerAlsFuenfZutatenUndErneahrungskategorie(IN ErnaehrungskategorieName_ VARCHAR(50))
BEGIN
    SELECT REZEPT.REZEPTNAME
    FROM REZEPT
    WHERE 5 > (
        SELECT COUNT(REZEPTZUTAT.ZUTATENNR)
        FROM REZEPTZUTAT
        WHERE REZEPTZUTAT.REZEPTNR = REZEPT.REZEPTNR
    ) AND REZEPT.REZEPTNR IN (
        SELECT REZEPT.REZEPTNR
        FROM ERNAEHRUNGSKATEGORIEN
        INNER JOIN ERNAEHRUNGKATREZEPT ON ERNAEHRUNGSKATEGORIEN.ERNAEHRUNGSKATEGORIE_ID = ERNAEHRUNGKATREZEPT.ERNAEHRUNGSKATEGORIE_ID
        INNER JOIN REZEPT ON ERNAEHRUNGKATREZEPT.REZEPTNR = REZEPT.REZEPTNR
        WHERE ERNAEHRUNGSKATEGORIEN.ERNAEHRUNGSKATEGORIENAME = ErnaehrungskategorieName_
    );
END//


CREATE PROCEDURE ZutatenVonRezept(IN RezeptName_ VARCHAR(50))
BEGIN
    SELECT ZUTAT.BEZEICHNUNG
    FROM REZEPT
    INNER JOIN REZEPTZUTAT ON REZEPT.REZEPTNR = REZEPTZUTAT.REZEPTNR
    INNER JOIN ZUTAT ON REZEPTZUTAT.ZUTATENNR = ZUTAT.ZUTATENNR
    WHERE REZEPT.REZEPTNAME = RezeptName_;
END//


CREATE PROCEDURE RezepteMitWenigerAlsFuenfZutaten()
BEGIN
    SELECT REZEPT.REZEPTNAME
    FROM REZEPT
    WHERE 5 > (
        SELECT COUNT(REZEPTZUTAT.ZUTATENNR)
        FROM REZEPTZUTAT
        WHERE REZEPTZUTAT.REZEPTNR = REZEPT.REZEPTNR
    );
END//


CREATE PROCEDURE DurchschnitlicheNaehrwerteAllerBestellungEinesKunden(IN KundenNR_ INT)
BEGIN
    SELECT KUNDE.KUNDENNR,
        AVG(ZUTAT.KALORIEN*BESTELLUNGZUTAT.MENGE) AS "Durchschnittliche Kalorien",
        AVG(ZUTAT.KOHLENHYDRATE*BESTELLUNGZUTAT.MENGE) AS "Durchschnittliche Kohlenhydrate",
        AVG(ZUTAT.PROTEIN*BESTELLUNGZUTAT.MENGE) AS "Durchschnittliche Proteine"
    FROM KUNDE
    INNER JOIN BESTELLUNG ON KUNDE.KUNDENNR = BESTELLUNG.KUNDENNR
    INNER JOIN BESTELLUNGZUTAT ON BESTELLUNG.BESTELLNR = BESTELLUNGZUTAT.BESTELLNR
    INNER JOIN ZUTAT ON BESTELLUNGZUTAT.ZUTATENNR = ZUTAT.ZUTATENNR
    GROUP BY KUNDE.KUNDENNR
    HAVING KUNDE.KUNDENNR = KundenNR_;
END//


CREATE PROCEDURE RezepteOhneBeschraenkungen(IN BeschraenkungsName_ VARCHAR(50))
BEGIN
    SELECT REZEPT.REZEPTNAME
    FROM REZEPT
    WHERE (
        SELECT COUNT(BESCHRAENKUNGEN.BESCHRAENKUNGS_ID)
        FROM BESCHRAENKUNGENREZEPT
        INNER JOIN BESCHRAENKUNGEN ON BESCHRAENKUNGENREZEPT.BESCHRAENKUNGS_ID = BESCHRAENKUNGEN.BESCHRAENKUNGS_ID
        WHERE BESCHRAENKUNGENREZEPT.REZEPTNR = REZEPT.REZEPTNR AND BESCHRAENKUNGEN.BESCHRAENKUNGSNAME = BeschraenkungsName_
    ) = 0;
END//


CREATE PROCEDURE RezepteMitWenigerAlsEinerBestimmtenKalorienMenge(IN Kalorien_ INT)
BEGIN
    SELECT REZEPT.REZEPTNAME
    FROM REZEPT
    INNER JOIN REZEPTZUTAT ON REZEPT.REZEPTNR = REZEPTZUTAT.REZEPTNR
    INNER JOIN ZUTAT ON ZUTAT.ZUTATENNR = REZEPTZUTAT.ZUTATENNR
    GROUP BY REZEPT.REZEPTNR 
    HAVING SUM(REZEPTZUTAT.MENGE * ZUTAT.KALORIEN) <= Kalorien_;
END//


CREATE PROCEDURE RezepteMitBestimmterZutat(IN Bezeichnung_ VARCHAR(50))
BEGIN
    SELECT REZEPT.REZEPTNAME
    FROM REZEPT
    INNER JOIN REZEPTZUTAT ON REZEPTZUTAT.REZEPTNR = REZEPT.REZEPTNR
    INNER JOIN ZUTAT ON ZUTAT.ZUTATENNR = REZEPTZUTAT.ZUTATENNR
    WHERE ZUTAT.BEZEICHNUNG = Bezeichnung_;
END//


CREATE PROCEDURE LieferantenAllerZutatenEinesBestimmtenRezeptes(IN RezeptName_ VARCHAR(50))
BEGIN
    SELECT DISTINCT LIEFERANT.LIEFERANTENNAME
    FROM LIEFERANT 
    INNER JOIN ZUTAT ON LIEFERANT.LIEFERANTENNR = ZUTAT.LIEFERANT
    INNER JOIN REZEPTZUTAT ON REZEPTZUTAT.ZUTATENNR = ZUTAT.ZUTATENNR
    INNER JOIN REZEPT ON REZEPT.REZEPTNR = REZEPTZUTAT.REZEPTNR
    WHERE REZEPT.REZEPTNAME = RezeptName_;
END//


CREATE PROCEDURE AlleNaehrwerteAllerRezepte()
BEGIN
    SELECT REZEPT.REZEPTNAME, SUM(ZUTAT.KALORIEN * REZEPTZUTAT.MENGE) AS "Kalorien", SUM(ZUTAT.KOHLENHYDRATE * REZEPTZUTAT.MENGE) AS "Kohlenhydrate", SUM(ZUTAT.PROTEIN * REZEPTZUTAT.MENGE) AS "Protein"
    FROM REZEPT
    INNER JOIN REZEPTZUTAT ON REZEPT.REZEPTNR = REZEPTZUTAT.REZEPTNR
    INNER JOIN ZUTAT ON REZEPTZUTAT.ZUTATENNR = ZUTAT.ZUTATENNR
    GROUP BY REZEPT.REZEPTNR;
END//


DELIMITER ;
